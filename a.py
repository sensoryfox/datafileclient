# upload.py
import os
import subprocess
import sys
from pathlib import Path

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.
# –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ, –µ—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Git.
PROXY_URL = "http://azyQZx:VTDf5S@170.244.95.14:9310"
PYPI_TOKEN = os.environ['PYPI_API_TOKEN'] 
DIST_DIR = "dist"
# --- –ö–û–ù–ï–¶ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ---


def main():
    """
    –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞ –Ω–∞ PyPI —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏.
    """
    project_root = Path(__file__).parent
    dist_path = project_root / DIST_DIR

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if not dist_path.exists() or not any(dist_path.iterdir()):
        print(f"‚ùå –ü–∞–ø–∫–∞ '{DIST_DIR}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞.")
        print("üí° –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –∫–æ–º–∞–Ω–¥–æ–π: python -m build")
        sys.exit(1)

    print("üì¶ –ù–∞–π–¥–µ–Ω—ã –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.")

    # 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –ø—Ä–æ–∫—Å–∏
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à–∏ –ø—Ä–æ–∫—Å–∏
    proxy_env = os.environ.copy()
    proxy_env["HTTP_PROXY"] = PROXY_URL
    proxy_env["HTTPS_PROXY"] = PROXY_URL
    print(f"üîß –ù–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–æ–∫—Å–∏: {PROXY_URL}")

    # 3. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã twine
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º sys.executable –¥–ª—è –≤—ã–∑–æ–≤–∞ pip –∏–∑ —Ç–æ–≥–æ –∂–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç -p, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è –≤ –ª–æ–≥–∞—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    command = [
        sys.executable,
        "-m",
        "twine",
        "upload",
        "--username",
        "__token__",  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–æ–∫–µ–Ω–∞ PyPI
        "--password",
        PYPI_TOKEN,
        str(dist_path / "*"),  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    ]

    print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é –∑–∞–≥—Ä—É–∑–∫—É –Ω–∞ PyPI...")
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º twine –∫–∞–∫ –¥–æ—á–µ—Ä–Ω–∏–π –ø—Ä–æ—Ü–µ—Å—Å —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
        result = subprocess.run(
            command,
            env=proxy_env,
            check=True,  # –í—ã–∑–æ–≤–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ twine –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —Å –æ—à–∏–±–∫–æ–π
            capture_output=True,  # –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥
            text=True,  # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –≤—ã–≤–æ–¥ –≤ —Ç–µ–∫—Å—Ç
        )
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")
        print("\n--- –í—ã–≤–æ–¥ Twine ---")
        print(result.stdout)
        print("--------------------")

    except subprocess.CalledProcessError as e:
        print("\n‚ùå –û–®–ò–ë–ö–ê: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å.")
        print(f"–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {e.returncode}")
        print("\n--- STDOUT ---")
        print(e.stdout)
        print("\n--- STDERR ---")
        print(e.stderr)
        print("--------------")
        sys.exit(1)
    except FileNotFoundError:
        print("‚ùå –û–®–ò–ë–ö–ê: –ö–æ–º–∞–Ω–¥–∞ 'twine' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ twine —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: pip install twine")
        sys.exit(1)


if __name__ == "__main__":
    main()